@model Entities.MainModels.ProductsCatalogModel

@{
    bool hasUpdateRecordRight = true;

    if (Model != null && Model.PageBasicInfoObj != null && Model.PageBasicInfoObj.EntityId > 0)
    {
        List<RoleRightEntity>? UserRolesRights = sessionManager != null ? await sessionManager.GetUserRoleRightsFromSession() : new List<RoleRightEntity>();
        hasUpdateRecordRight = UserRolesRights != null && UserRolesRights.Count > 0 && UserRolesRights.Any(x => x.EntityId == Model?.PageBasicInfoObj?.EntityId && x.RightId == (short)UserRightsEnum.Update) ? true : false;
    }

}

@await Html.PartialAsync("~/Views/Common/_DataTableLength.cshtml")

<table class="table site-table-listing">
    <thead>
        <tr>
            <th id="lbl_hdr_productId"> Product ID</th>
            <th id="lbl_hdr_prodcutImg"> Picture</th>
            <th id="lbl_hdr_productName"> Name</th>
            <th id="lbl_hdr_productRate">  Rating</th>
         
            <th id="lbl_hdr_productReviews"> Total Reviews</th>
         

            <th class="text-center" style="width: 20px;"><i class="icon-arrow-down12"></i></th>
        </tr>
    </thead>
    <tbody>

        @{
            if (Model != null && Model.ProductsList != null && Model.ProductsList.Count > 0)
            {
                foreach (var item in Model.ProductsList)
                {
                    <tr>
                        <td><span class="text-dark">@item.ProductId</span></td>

                        <td>

                            @{
                                string ImagePath = System.IO.Path.Combine(Directory.GetCurrentDirectory(), "wwwroot" + item.AttachmentURL);

                                if (System.IO.File.Exists(ImagePath))
                                {

                                    <a href="@item.AttachmentURL" target="_blank">
                                        <img src="@item.AttachmentURL" class="" width="100" height="100" alt="">
                                    </a>
                                }
                                else
                                {
                                    <a href="/content/themeContent/global_assets/images/placeholders/placeholder.jpg" target="_blank">
                                        <img src="/content/themeContent/global_assets/images/placeholders/placeholder.jpg" class="" width="100" height="100" alt="">
                                    </a>
                                }
                            }
                        </td>


                        <td>
                            @(StringConversionHelper.TruncateAnyStringValue(@item.ProductName, 20, true))
                          
                        </td>


                        <td>@(Math.Round(item.Rating, 2))</td>


                        <td><span class="text-dark">@(item.TotalReviews)</span></td>


                        <td class="text-center">
                            <div class="list-icons">
                                <div class="dropdown">
                                    <a href="#" class="list-icons-item" data-toggle="dropdown">
                                        <i class="icon-menu9"></i>
                                    </a>

                                    <div class="dropdown-menu dropdown-menu-right">
                                        <a href="@Url.Action("ProductReviewsDetail","ProductsCatalog", new {langCode = Model?.PageBasicInfoObj?.langCode, ProductId=item.ProductId })" class="dropdown-item text-indigo-600"><i class="icon-database-edit2"></i>Reviews Detail</a>

                                      

                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-center" colspan="20"><b>  No record found </b></td>

                </tr>
            }
        }




    </tbody>
</table>



<div class="row" id="pagination_div">

    @{
        if (Model != null && Model.pageHelperObj != null)
        {
            PagerHelper ph = new PagerHelper();
            ph.CurrentPage = Model.pageHelperObj.CurrentPage;
            ph.TotalRecords = Model.pageHelperObj.TotalRecords;
            ph.RecordsPerPage = Model.pageHelperObj.RecordsPerPage;
            ph.EntityId = Model?.PageBasicInfoObj?.EntityId ?? 0;
            ph.PageUrl = Url.Action("ProductsReviews", "ProductsCatalog", new { langCode = Model?.PageBasicInfoObj?.langCode });

            ph.AjaxEnabled = true;
            ph.OnClientClickAjaxCall = "PaginationAfterAjax(this)";

            @await Html.PartialAsync("~/Views/Common/_Pager.cshtml", ph)
        }

    }


</div>


