@model Entities.MainModels.DiscountModel

@{
    bool hasUpdateRecordRight = true;

    if (Model != null && Model.PageBasicInfoObj != null && Model.PageBasicInfoObj.EntityId > 0)
    {
        List<RoleRightEntity>? UserRolesRights = sessionManager != null ? await sessionManager.GetUserRoleRightsFromSession() : new List<RoleRightEntity>();
        hasUpdateRecordRight = UserRolesRights != null && UserRolesRights.Count > 0 && UserRolesRights.Any(x => x.EntityId == Model?.PageBasicInfoObj?.EntityId && x.RightId == (short)UserRightsEnum.Update) ? true : false;
    }

}

@await Html.PartialAsync("~/Views/Common/_DataTableLength.cshtml")

<table class="table site-table-listing">
    <thead>
        <tr>
            <th id="lbl_hdr_discntId"> Discount ID</th>
            <th id="lbl_hdr_discntTitle"> Title</th>
            <th id="lbl_hdr_discntType"> Discount Type</th>

            <th id="lbl_hdr_discntValueType"> Discount Value Type</th>
            <th id="lbl_hdr_discntValue"> Discount Value</th>
            <th id="lbl_hdr_discntStartDte"> Start Date</th>
            <th id="lbl_hdr_discntEndDte"> End Date</th>
            <th id="lbl_hdr_discntCpnCode"> Coupon Code</th>
            <th id="lbl_hdr_discntStatus"> Status</th>
            <th id="lbl_hdr_discntCreatedOn"> Created On</th>


            <th class="text-center" style="width: 20px;"><i class="icon-arrow-down12"></i></th>
        </tr>
    </thead>
    <tbody>

        @{
            if (Model != null && Model.DiscountsList != null && Model.DiscountsList.Count > 0)
            {
                foreach (var item in Model.DiscountsList)
                {
                    string DiscountValueType = item.DiscountValueType == (short)DiscountValueTypeEnum.FixedAmount ? "Fixed Amount" : "Percentage Amount";
                    string DiscountValue = item.DiscountValueType == (short)DiscountValueTypeEnum.FixedAmount ? (item.DiscountValue.ToString() + " " + CommonConversionHelper.GetDefaultCurrencySymbol()) : (item.DiscountValue.ToString() + " %");

                    <tr>

                        <td><span class="text-dark">@item.DiscountId</span></td>
                        <td>
                            <div class="d-flex align-items-center">
                                <div>
                                    <a href="#" class="text-default font-weight-semibold">@item.Title</a>

                                </div>
                            </div>
                        </td>
                        <td><span class="text-dark">@item.DiscountTypeName</span></td>
                        <td><span class="text-dark">@DiscountValueType</span></td>
                        <td><span class="text-dark">@DiscountValue</span></td>

                        @{
                            string StartDate = Convert.ToDateTime(item.StartDate).ToString("dd MMM, yyyy");
                        }
                        <td><span class="text-dark">@(StartDate)</span></td>

                        @{
                            string EndDate = Convert.ToDateTime(item.EndDate).ToString("dd MMM, yyyy");
                        }
                        <td><span class="text-dark">@(EndDate)</span></td>



                        @if (item.IsActive != null && item.IsActive == false)
                        {
                            <td><span class="badge bg-blue">Not Active</span></td>
                        }
                        else
                        {
                            <td><span class="badge bg-success-400">Active</span></td>
                        }

                        @{
                            string CreatedOnDate = item.CreatedOn == null ? "" : Convert.ToDateTime(item.CreatedOn).ToString("dd MMM, yyyy");
                        }
                        <td><span class="text-dark">@(item.CouponCode)</span></td>
                        <td><span class="text-dark">@(CreatedOnDate)</span></td>


                        <td class="text-center">
                            <div class="list-icons">
                                <div class="dropdown">
                                    <a href="#" class="list-icons-item" data-toggle="dropdown">
                                        <i class="icon-menu9"></i>
                                    </a>

                                    <div class="dropdown-menu dropdown-menu-right">
                                        @if (hasUpdateRecordRight)
                                        {
                                            <a href="@(Url.Action("UpdateDiscount","Discounts",new{  langCode = Model?.PageBasicInfoObj?.langCode ,DiscountId=item.DiscountId}))" class="dropdown-item text-indigo-600"><i class="icon-database-edit2"></i>Edit</a>
                                        }

                                        <a href="#!" onclick="ShowDiscountUsageHistory('@item.MaxQuantity' , '@item.TotalUsage');" class="dropdown-item text-teal-600"><i class="icon-database-edit2"></i>Usage History</a>

                                        @{
                                            ListingDeleteButton pageDeleteButton = new ListingDeleteButton
                                            {
                                                EntityId = Model?.PageBasicInfoObj?.EntityId ?? 0,
                                                primaryKeyColumn = "DiscountId",
                                                primarykeyValue = item.DiscountId.ToString(),
                                                tableName = "Discounts",
                                                SqlDeleteType = (short)SqlDeleteTypes.ForeignKeyDelete,
                                            };
                                        }
                                        @await Html.PartialAsync("~/Views/Common/_ListingDeleteButton.cshtml", pageDeleteButton)


                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-center" colspan="20"><b>  No record found </b></td>

                </tr>
            }
        }




    </tbody>
</table>



<div class="row" id="pagination_div">

    @{
        if (Model != null && Model.pageHelperObj != null)
        {
            PagerHelper ph = new PagerHelper();
            ph.CurrentPage = Model.pageHelperObj.CurrentPage;
            ph.TotalRecords = Model.pageHelperObj.TotalRecords;
            ph.RecordsPerPage = Model.pageHelperObj.RecordsPerPage;
            ph.EntityId = Model?.PageBasicInfoObj?.EntityId ?? 0;
            ph.PageUrl = Url.Action("DiscountsList", "Discounts", new { langCode = Model?.PageBasicInfoObj?.langCode });

            ph.AjaxEnabled = true;
            ph.OnClientClickAjaxCall = "PaginationAfterAjax(this)";

            @await Html.PartialAsync("~/Views/Common/_Pager.cshtml", ph)
        }

    }


</div>


